<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clis on DocuAPI Example Site</title>
    <link>https://tmaiaroto.github.io/aegis/cli/</link>
    <description>Recent content in Clis on DocuAPI Example Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://tmaiaroto.github.io/aegis/cli/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://tmaiaroto.github.io/aegis/cli/1_init/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmaiaroto.github.io/aegis/cli/1_init/</guid>
      <description>Init The first CLI command you may use, especially when getting started, is aegis init. This will create a main.go and aegis.yaml file in the current directory.
Note that if you already have either of these files present, the command will not replace or touch your existing files.
The contents of main.go include a short boilerplate example Aegis application with API Gateway event handling via the Router.
The aegis.yaml then includes configuration for creating an API Gateway upon deploy.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tmaiaroto.github.io/aegis/cli/2_deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmaiaroto.github.io/aegis/cli/2_deploy/</guid>
      <description>Deploy The aegis deploy command will likely be the next command you&amp;rsquo;re after. Running it anywhere there is buildable Go code as well as an aegis.yaml will result in a deployment to AWS.</description>
    </item>
    
  </channel>
</rss>